<?php
// $Id$

/**
 * @file
 * Small improvements designed to enhance the default features used in Drupal Gardens.
 */

/**
 * Implements hook_library_alter().
 */
function gardens_features_required_library_alter(&$libraries, $module) {
  // Override the jQuery Form Plugin with a custom version.
  if ($module == 'system' && isset($libraries['jquery.form'])) {
    $libraries['jquery.form']['version'] = '2.52-patched';
    $libraries['jquery.form']['js'] = array(
      drupal_get_path('module', 'gardens_features_required') . '/plugins/jquery.form.js' => array(),
    );
  }
}

/**
 * Implements hook_media_browser_plugins_alter().
 */
function gardens_features_required_media_browser_plugins_alter(&$plugins) {
  // The remote_file plugin provided by the Remote Stream Wrapper module has not
  // yet been sufficiently tested for Drupal Gardens.
  unset($plugins['remote_file']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gardens_features_required_remote_stream_wrapper_media_browser_form_alter(&$form) {
  // hook_media_browser_plugins_alter() runs after
  // hook_media_browser_plugin_view(), so doesn't prevent all possible hijack
  // mechanisms. Therefore, also strip away form access.
  $form['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gardens_features_required_form_mollom_admin_settings_alter(&$form) {
  $form['mollom_protect_new_comment_types'] = array(
    '#type' => 'checkbox',
    '#title' => t('Protect comments for new content types'),
    '#default_value' =>  variable_get('mollom_protect_new_comment_types', 0),
    '#description' => t('Causes Mollom to automatically add text analysis for spam for the subject and body for comments on any newly created content type.'),
  );
  $form['mollom_testing_mode']['#weight'] = 1;
}

/**
 * Implements hook_node_type_insert().
 *
 * This must run after comment_node_type_insert().
 */
function gardens_features_required_node_type_insert($type) {
  if (module_exists('mollom') && variable_get('mollom_protect_new_comment_types', 0)) {
    // @todo Submit a core patch to make resetting the node type cache here
    //   unnecessary.
    node_type_cache_reset();
    $mollom_form = mollom_form_new("comment_node_{$type->type}_form");
    mollom_form_save($mollom_form);
  }
}
